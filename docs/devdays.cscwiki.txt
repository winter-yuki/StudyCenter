== Описание проекта ==

Study Center - сервис, облегчающий взаимодействие студентов между собой и с преподавателями.

Одна из главных ценностей хороших образовательных программ, как университетов, так и дополнительных курсов, - возможность вместе учиться с очень мотивированными и интересными студентами и у хороших преподавателей. В то же время в действительности оказывается, что общения между студентами довольно мало, особенно на вечерних программах (a la CSC), где у каждого свои курсы и вокруг каждый раз разные люди. А общение с преподавателями совершенно не структурировано: не ясно сколько времени у преподавателя можно занять вопросами по курсу или просто из сферы его деятельности.

Проект Study Center помогает преодолеть социальную дистанцию между студентами и упорядочить их общение с преподавателями.

=== Проблемы ===

Допустим, у студента что-то не получается по учёбе и ответ на один вопрос не поможет, как сейчас он может попросить помощи?
* Написать лично преподавателю - неудобно тратить личное время преподавателя, бОльшая социальная дистанция между студентом и преподавателем, чем между студентом и студентом.
* Написать в общий чат курса - всем людям в чате прилетит уведомление, в котором будет просьба о помощи. Даже если хватит духу написать туда, вряд ли кто-то откликнется.
* Написать лично кому-то из студентов - сложно, если вы не знакомы. К тому же на личную просьбу сложно отказать, такая просьба во многом обязывает человека помочь.

Отличной верификацией понимания темы является объяснение её другому. Нет простого способа наладить взаимовыгодную коммуникацию между тем, кому нужна помощь и тем, кому интересен предмет и он хотел бы лучше разобраться.

Над темами и задачами намного продуктивнее думать вместе, обмениваясь гипотезами, и верифицируя мысли друг друга - большее пространство поиска будет пройдено и осмыслено, тренировка выражения мыслей. Как найти таких человека-двух? Все те же способы и проблемы, что и выше.

Хочется попросить преподавателя провести лишнее занятие по какой-то теме курса или научного интереса преподавателя? Нет быстрой процедуры, которая позволила бы это сделать в рамках учебной программы, только личная просьба студентов.

Сознательное отношение к помощи и умение помогать - довольно редки. В то же время человеку, у которого и так не получается, можно легко навредить вместо того чтобы правда помочь: он может почувствовать себя глупым или помощь будет касаться решения конкретного задания, но не понимания темы.

=== Решение ===

Study Center объединяет студентов и преподавателей в группы, по группе на курс.

Чтобы попросить помощи, студент оставляет в группе безадресный запрос на помощь или на совместную работу. Остальные участники его увидят, только специально зайдя в сервис. Это нужно чтобы оставлять запросы можно было как можно проще.

Чтобы бы стимулировать оставлять запросы и отвечать на них, вводится система поощрений. За наличие опубликованных запросов в середине курса студентам выдаётся маленький, но всегда приятный мерч. За помощь начисляются очки, за которые можно получить: признание, никогда-не-лишний-мерч, Время (далее).

Когда студент откликается на запрос о помощи, ему показывают подсказку, как правильно помогать и не навредить: вроде такой https://www.wonderzine.com/wonderzine/life/life/227142-help-i-need-somebody.
После занятия, помогающему начисляются очки в зависимости от времени помощи и оценки того, кому помогали. Оценка ставится по качеству помощи: помогли решить задачу или понять тему. А так же, исходя из ментального комфорта того, кому помогали (на сколько помогающим соблюдались советы из подсказки).

У каждого студента есть валюта Время, которое он может конвертировать на время конкретного преподавателя.
Преподаватель раз в неделю (например), сообщает кураторами, сколько времени он готов посвятить студентам.
Кураторы программы определяют, сколько из этого времени они готовы оплачивать и договариваются, сколько преподаватель будет доступен студентам.
Исходя из этого автоматически определяется обменный курс Времени у студентов на время этого конкретного преподавателя.
Так, студенты не будут бояться тратить время преподавателя, так как будут знать, что он априорно согласен его отдать в доступных количествах.

Время можно получить конвертировав очки, полученные за помощь. Временем могут помочь кураторы отстающим. Студенты могут скидываться Временем, если какая-то тема интересует нескольких.

== Реализованно ==

* Возможность создания запросов на помощь
* Возможность реагирования на запрос, с налаживанием коммуникации между участниками
* У каждого пользователя существует счет человеко-часов
* Пользователь может получать человеко-часы за счет активности на платформе

== Состав команды ==

* Роман Галяминский [db, backend]
* Илья Иванцов [DevOps, Frontend]
* Семен Сорокин [Backend]
* Илья Колегов [Frontend]

== Демонстрация ==

Ссылка на видео, с демонстрацией приложения
https://youtu.be/Pg6eoRnoCig

Ссылка на презентацию:
https://www.canva.com/design/DAExdyWx-9I/jrs5Th2yQW6gT9usuZeTMg/view?utm_content=DAExdyWx-9I&utm_campaign=designshare&utm_medium=link&utm_source=sharebutton

== Репозиторий ==
[https://gitlab.com/dev-days-21 gitlab]
[http://84.201.140.94/api/ Документация]

== Известные баги ==

* Нестабильная работа review.
* Ошибки в счетчике времени на странице чата

== Как запустить? ==

<source>git clone https://gitlab.com/dev-days-21</source>


'''Frontend'''
<source>cd frontend</source>
<source>npm i</source>
<source>npm start</source>

'''Backend'''

<source>cd backend</source>
<source>python3 -m venv backenv</source>
<source>source backenv/bin/activate</source>
<source>chmod +x ./kill_gunicorn.sh</source>
<source>./kill_gunicorn.sh</source>
<source>pip3 install -r requirements.txt</source>
<source>pip3 install gunicorn</source>
<source>source ./env.sh</source>
<source>sed -i 's|/swaggerui|/api/swaggerui|' backenv/lib/python3.6/site-packages/flask_restx/apidoc.py</source>
<source>gunicorn --workers 3 --bind unix:/home/gitlab-runner/builds/xmVTVh3Z/0/dev-days-21/study-club/backend/app.sock -m 777 wsgi:app --daemon</source>


'''SocketServer'''

<source>cd socket</source>
<source>npm i</source>
<source>node server.js</source>
